<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="user">
	<!-- 用户resultMap -->
	<resultMap id="userResultMap" type="com.wade.framework.admin.entity.UserEntity" >
		<result property="userId" column="USER_ID"></result>
		<result property="orgId" column="ORG_ID"></result>
		<result property="loginId" column="LOGIN_ID"></result>
		<result property="lgName" column="LG_NAME"></result>
		<result property="userName" column="USER_NAME"></result>
		<result property="passWord" column="PASS_WORD"></result>
		<result property="sex" column="SEX"></result>
		<result property="photo" column="PHOTO"></result>
		<result property="memo" column="MEMO"></result>
		<result property="defaultRole" column="DEFAULT_ROLE"></result>
		<result property="defaultRoleName" column="DEFAULT_ROLE_NAME"></result>
		<result property="userType" column="USER_TYPE"></result>
		<result property="avaliable" column="AVALIABLE"></result>
		<result property="createUser" column="CREATE_BY"></result>
		<result property="updateUser" column="UPDATE_BY"></result>
		<result property="createTime" column="CREATE_TIME"></result>
		<result property="updateTime" column="UPDATE_TIME"></result>
		<result property="deleteMark" column="DELETE_MARK"></result>
	</resultMap>
	<!-- 插入用户记录 -->
	<insert id="insertUser" parameterType="com.wade.framework.admin.entity.UserEntity" useGeneratedKeys="true" keyProperty="userId" >
		INSERT INTO ts_user 
			( 
			  	ORG_ID,
			  	LOGIN_ID,
			  	LG_NAME,
			  	USER_NAME,
			  	PASS_WORD,
			  	SEX,
			  	PHOTO,
			  	MEMO,
			  	DEFAULT_ROLE,
			  	DEFAULT_ROLE_NAME,
			  	USER_TYPE,
			  	AVALIABLE,
			  	CREATE_BY,
			  	UPDATE_BY,
			  	CREATE_TIME,
			  	UPDATE_TIME,
			  	DELETE_MARK
			)
			VALUES
			(
			  	#{orgId},
			  	#{loginId},
			  	#{lgName},
			  	#{userName},
			  	#{passWord},
			  	#{sex},
			  	#{photo},
			  	#{memo},
			  	#{defaultRole},
			  	#{defaultRoleName},
			  	#{userType},
			  	#{avaliable},
			  	#{createUser},
			  	#{updateUser},
			  	#{createTime},
			  	#{updateTime},
			  	#{deleteMark}
			) 
	</insert>
	<!-- 更新用户记录 -->
	<update id="updateUser" parameterType="com.wade.framework.admin.entity.UserEntity">
		update ts_user set  
			USER_NAME=#{userName},
			SEX=#{sex},
			PHOTO=#{photo},
			MEMO=#{memo},
			AVALIABLE=#{avaliable},
			update_by = #{updateUser},
			update_time=#{updateTime}
		 where USER_ID=#{userId}
	</update>
	<sql id="sql_userList">
		SELECT 
			USER_ID,
			ORG_ID,
			LOGIN_ID,
			LG_NAME,
			USER_NAME,
			PASS_WORD,
			SEX,
			PHOTO,
			MEMO,
			DEFAULT_ROLE,
			DEFAULT_ROLE_NAME,
			USER_TYPE,
			AVALIABLE,
			CREATE_BY,
			UPDATE_BY,
			CREATE_TIME,
			UPDATE_TIME,
			DELETE_MARK
		 FROM ts_user a where delete_mark=0
		 <choose >
		 	<when test="orgId!=-1">
				 and org_id=#{orgId}
		 	</when>
		 	<otherwise>
		 		and (org_id=-1 or org_id is null)
		 	</otherwise>
		 </choose>
		 <if test="lgName!=null and lgName!=''">
		 	and instr(LG_NAME ,#{lgName})>0 
		 </if>
		 <if test="userName!=null and userName!=''">
		 	and instr(USER_NAME ,#{userName})>0 
		 </if>
		 <if test="postId!=null">
		 	<choose>
			 	<when test="postId!=-1">
			 		and exists(select * from tr_user_post where user_id=a.user_id and post_id=#{postId})
			 	</when>
			 	<otherwise>
			 		and not exists(select * from tr_user_post where user_id=a.user_id)
			 	</otherwise>
		 	</choose>
		 </if>
	</sql>
	<!-- 分页查询记录 -->
	<select id="queryUsersByPage" parameterType="com.wade.framework.admin.entity.UserEntity" resultMap="userResultMap">
		<include refid="sql_userList"/>
	</select>
	<select id="queryUsers" parameterType="com.wade.framework.admin.entity.UserEntity" resultMap="userResultMap">
		<include refid="sql_userList"/>
	</select>
	<select id="queryAllUsers" parameterType="com.wade.framework.admin.entity.UserEntity" resultMap="userResultMap">
		SELECT 
			USER_ID,
			ORG_ID,
			LOGIN_ID,
			LG_NAME,
			USER_NAME,
			PASS_WORD,
			SEX,
			PHOTO,
			MEMO,
			DEFAULT_ROLE,
			DEFAULT_ROLE_NAME,
			USER_TYPE,
			AVALIABLE,
			CREATE_BY,
			UPDATE_BY,
			CREATE_TIME,
			UPDATE_TIME,
			DELETE_MARK
		 FROM ts_user a where delete_mark=0
	</select>
	<!-- 根据主键查询用户记录 -->
	<select id="queryUserById" parameterType="java.lang.Long" resultMap="userResultMap">
		select 
			USER_ID,
			ORG_ID,
			LOGIN_ID,
			LG_NAME,
			USER_NAME,
			PASS_WORD,
			SEX,
			PHOTO,
			MEMO,
			DEFAULT_ROLE,
			DEFAULT_ROLE_NAME,
			USER_TYPE,
			AVALIABLE,
			CREATE_BY,
			UPDATE_BY,
			CREATE_TIME,
			UPDATE_TIME,
			DELETE_MARK
		from ts_user where USER_ID=#{userId}
	</select>
	<!-- 删除用户记录 -->
	<delete id="deleteUser"  parameterType="com.wade.framework.admin.entity.UserEntity">
		update ts_user set delete_mark=1,update_by=#{updateUser},update_time=#{updateTime} where USER_ID=#{userId}
	</delete>
	<delete id="deleteUserByOrg"  parameterType="com.wade.framework.admin.entity.OrgEntity">
		update ts_user set org_id=-1,update_by=#{updateUser},update_time=#{updateTime} where ORG_ID=#{orgId}
	</delete>
	<!-- 插入用户岗位信息 -->
	<insert id="saveUserPost" parameterType="com.wade.framework.admin.entity.UserPostEntity">
		insert into tr_user_post(USER_ID,POST_ID)values(#{userId},#{postId})
	</insert>
	<!-- 删除用户岗位信息 -->
	<insert id="deleteUserPost" parameterType="java.lang.Long">
		delete from tr_user_post where user_id=#{userId}
	</insert>
	<!-- 插入用户角色信息 -->
	<insert id="saveUserRole" parameterType="com.wade.framework.admin.entity.UserRoleEntity">
		insert into tr_user_role(USER_ID,ROLE_ID)values(#{userId},#{roleId})
	</insert>
	<!-- 删除用户角色信息 -->
	<insert id="deleteUserRole" parameterType="java.lang.Long">
		delete from tr_user_role where user_id=#{userId}
	</insert>
	<!-- 更新用户机构 -->
	<update id="updateOrg"  parameterType="com.wade.framework.admin.entity.UserEntity">
		update ts_user set org_id=#{orgId},update_by=#{updateUser},update_time=#{updateTime} where USER_ID=#{userId}
	</update>
</mapper>