<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="post">
	<!-- 岗位resultMap -->
	<resultMap id="postResultMap" type="com.wade.framework.admin.entity.PostEntity" >
		<id property="id" column="ID"></id>
		<result property="orgId" column="ORG_ID"></result>
		<result property="parentId" column="PARENT_ID"></result>
		<result property="postPath" column="POST_PATH"></result>
		<result property="postName" column="POST_NAME"></result>
		<result property="postDesc" column="POST_DESC"></result>
		<result property="avaliable" column="AVALIABLE"></result>
		<result property="createUser" column="CREATE_BY"></result>
		<result property="updateUser" column="UPDATE_BY"></result>
		<result property="createTime" column="CREATE_TIME"></result>
		<result property="updateTime" column="UPDATE_TIME"></result>
		<result property="deleteMark" column="DELETE_MARK"></result>
		<association property="parentPost"  column="PARENT_ID" select="queryPostById"/>
	</resultMap>
	<!-- 插入岗位记录 -->
	<insert id="insertPost" parameterType="com.wade.framework.admin.entity.PostEntity" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO ts_post 
			( 
			  	ORG_ID,
			  	PARENT_ID,
			  	POST_PATH,
			  	POST_NAME,
			  	POST_DESC,
			  	AVALIABLE,
			  	CREATE_BY,
			  	UPDATE_BY,
			  	CREATE_TIME,
			  	UPDATE_TIME,
			  	DELETE_MARK
			)
			VALUES
			(
			  	#{orgId},
			  	#{parentId},
			  	#{postPath},
			  	#{postName},
			  	#{postDesc},
			  	#{avaliable},
			  	#{createUser},
			  	#{updateUser},
			  	#{createTime},
			  	#{updateTime},
			  	#{deleteMark}
			) 
	</insert>
	<!-- 更新岗位记录 -->
	<update id="updatePost" parameterType="com.wade.framework.admin.entity.PostEntity">
		update ts_post set  
			PARENT_ID=#{parentId},
			POST_PATH=#{postPath},
			POST_NAME=#{postName},
			POST_DESC=#{postDesc},
			AVALIABLE=#{avaliable},
			update_by = #{updateUser},
			update_time=#{updateTime}
		 where ID=#{id}
	</update>
	<sql id="sql_postList">
		SELECT 
			ID,
			ORG_ID,
			PARENT_ID,
			POST_PATH,
			POST_NAME,
			POST_DESC,
			AVALIABLE,
			CREATE_BY,
			UPDATE_BY,
			CREATE_TIME,
			UPDATE_TIME,
			DELETE_MARK
		 FROM ts_post where delete_mark=0
		 and org_id=#{orgId}
		 <if test="postName!=null and postName!=''">
		 	and instr(post_name ,#{postName})>0 
		 </if>
		 <if test="avaliable!=null and avaliable!=''">
		 	and avaliable=#{avaliable}
		 </if>
		 order by post_path
	</sql>
	<!-- 分页查询记录 -->
	<select id="queryPostsByPage" parameterType="com.wade.framework.admin.entity.PostEntity" resultMap="postResultMap">
		<include refid="sql_postList"/>
	</select>
	<select id="queryPost" parameterType="com.wade.framework.admin.entity.PostEntity" resultMap="postResultMap">
		<include refid="sql_postList"/>
	</select>
	<!-- 根据主键查询岗位记录 -->
	<select id="queryPostById" parameterType="java.lang.Long" resultMap="postResultMap">
		select 
			ID,
			ORG_ID,
			PARENT_ID,
			POST_PATH,
			POST_NAME,
			POST_DESC,
			AVALIABLE,
			CREATE_BY,
			UPDATE_BY,
			CREATE_TIME,
			UPDATE_TIME,
			DELETE_MARK
		from ts_post where ID=#{id}
	</select>
	<!-- 根据主键查询岗位记录 -->
	<select id="queryPostsByUserId" parameterType="java.lang.Long" resultMap="postResultMap">
		SELECT 
			b.ID,
			b.ORG_ID,
			b.PARENT_ID,
			b.POST_PATH,
			b.POST_NAME,
			b.POST_DESC,
			b.AVALIABLE,
			b.CREATE_BY,
			b.UPDATE_BY,
			b.CREATE_TIME,
			b.UPDATE_TIME,
			b.DELETE_MARK
		FROM tr_user_post a, ts_post b
		WHERE a.POST_ID=b.ID AND a.user_id=#{userId}
	</select>
	<!-- 更新岗位路径 -->
	<update id="updatePostPath"  parameterType="com.wade.framework.admin.entity.PostEntity">
		update ts_post set post_path=#{postPath},update_by=#{updateUser},update_time=#{updateTime} where ID=#{id}
	</update>
	<!-- 删除岗位记录 -->
	<delete id="deletePost"  parameterType="com.wade.framework.admin.entity.PostEntity">
		update ts_post set delete_mark=1,update_by=#{updateUser},update_time=#{updateTime} where ID=#{id}
	</delete>
	<!-- 删除机构下岗位记录 -->
	<delete id="deletePostByOrg"  parameterType="com.wade.framework.admin.entity.OrgEntity">
		update ts_post set delete_mark=1,update_by=#{updateUser},update_time=#{updateTime} where ORG_ID=#{orgId}
	</delete>
	<!-- 查询岗位树树 -->
	<select id="queryPostTree" parameterType="com.wade.framework.admin.entity.PostEntity" resultType="com.wade.framework.base.entity.TreeEntity">
		SELECT 
			ID id,
			PARENT_ID parentId,
			POST_PATH path,
			POST_NAME name
		 FROM ts_post where delete_mark=0 and AVALIABLE='Y'
		 <if test="orgId!=null">
		 	and org_id=#{orgId} 
		 </if>
	</select>
</mapper>